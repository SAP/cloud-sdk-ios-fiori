name: CI (Xcode 11)

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Generate Xcode project
      run: swift package generate-xcodeproj
      env:
        DEVELOPER_DIR: '/Applications/Xcode_11.7.app/Contents/Developer'
    - name: Build and Test on iOS 13 / Xcode 11
      run: set -o pipefail && xcodebuild -enableCodeCoverage YES -derivedDataPath Build/ -project FioriSwiftUI.xcodeproj -scheme FioriSwiftUI-Package -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=13.7,name=iPhone 11' clean build test | xcpretty
      env:
        DEVELOPER_DIR: '/Applications/Xcode_11.7.app/Contents/Developer'
    - name: Create code coverage report
      run: ./scripts/xccov-to-sonarqube-generic.sh Build/Logs/Test/*.xcresult/ > sonarqube-generic-coverage.xml
    - name: Store coverage for sonar job
      uses: actions/upload-artifact@v1
      with:
        name: coverage
        path: sonarqube-generic-coverage.xml

  sonar:
    needs: build
    if: github.repository == 'SAP/cloud-sdk-ios-fiori'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get coverage from build job
      uses: actions/download-artifact@v1
      with:
        name: coverage
    - name: Scan (main branch)
      if: github.event_name == 'push'
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
    - name: Scan (PR)
      if: github.event_name == 'pull_request_target'
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.branch.name=${{ github.event.pull_request.head.ref }}
          -Dsonar.branch.target=main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
