import Foundation
import SwiftUI

/**
 Components in this file will have `View` and `Style` definitions generated by Sourcery.
 */

// sourcery: BaseComponent
protocol _TitleComponent {
    // sourcery: @ViewBuilder
    var title: AttributedString { get }
}

// sourcery: BaseComponent
protocol _SubtitleComponent {
    // sourcery: @ViewBuilder
    var subtitle: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _MandatoryFieldIndicatorComponent {
    // sourcery: resultBuilder.name = @ViewBuilder, resultBuilder.backingComponent = TextOrIconView
    // sourcery: defaultValue = .text("*")
    var mandatoryFieldIndicator: TextOrIcon? { get }
}
 
protocol _MandatoryField: _MandatoryFieldIndicatorComponent {
    // sourcery: defaultValue = false
    var isRequired: Bool { get }
}

// sourcery: BaseComponent
protocol _TagsComponent {
    // sourcery: resultBuilder.name = @TagBuilder, resultBuilder.backingComponent = TagStack
    var tags: [AttributedString] { get }
}

// sourcery: BaseComponent
protocol _FootnoteComponent {
    // sourcery: @ViewBuilder
    var footnote: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _DescriptionComponent {
    // sourcery: @ViewBuilder
    var description: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _StatusComponent {
    // sourcery: resultBuilder.name = @ViewBuilder, resultBuilder.backingComponent = TextOrIconView
    var status: TextOrIcon? { get }
}

// sourcery: BaseComponent
protocol _SubstatusComponent {
    // sourcery: resultBuilder.name = @ViewBuilder, resultBuilder.backingComponent = TextOrIconView
    var substatus: TextOrIcon? { get }
}

// sourcery: BaseComponent
protocol _DetailImageComponent {
    // sourcery: @ViewBuilder
    var detailImage: Image? { get }
}

// sourcery: BaseComponent
protocol _IconsComponent {
    // sourcery: resultBuilder.name = @IconBuilder, resultBuilder.backingComponent = IconStack
    var icons: [TextOrIcon] { get }
}

// sourcery: BaseComponent
protocol _FilledIconComponent {
    // sourcery: @ViewBuilder
    var filledIcon: Image? { get }
}

// sourcery: BaseComponent
protocol _AccessoryIconComponent {
    // sourcery: @ViewBuilder
    var accessoryIcon: Image? { get }
}

// sourcery: BaseComponent
protocol _FootnoteIconsComponent {
    // sourcery: resultBuilder.name = @FootnoteIconsBuilder, resultBuilder.backingComponent = FootnoteIconStack
    var footnoteIcons: [TextOrIcon] { get }
}

// sourcery: BaseComponent
protocol _FootnoteIconsTextComponent {
    // sourcery: @ViewBuilder
    var footnoteIconsText: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _AvatarsComponent {
    // sourcery: resultBuilder.name = @AvatarsBuilder, resultBuilder.backingComponent = AvatarsListStack
    var avatars: [TextOrIcon] { get }
}

// sourcery: BaseComponent
protocol _IconComponent {
    // sourcery: @ViewBuilder
    var icon: Image? { get }
}

// sourcery: BaseComponent
protocol _LinearProgressIndicatorComponent {
    // sourcery: @Binding
    var indicatorProgress: Double { get }
}

// TODO: rename to _ActionComponent after resolving the conflict.
// sourcery: BaseComponent
protocol _ActionComponent {
    // sourcery: @ViewBuilder
    var action: FioriButton? { get }
}

// sourcery: BaseComponent
protocol _SwitchComponent {
    // sourcery: @Binding
    var isOn: Bool { get }
}

// sourcery: BaseComponent
protocol _CounterComponent {
    // sourcery: @ViewBuilder
    var counter: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _HeaderActionComponent {
    // sourcery: @ViewBuilder
    var headerAction: FioriButton? { get }
}

// sourcery: BaseComponent
protocol _SecondaryActionComponent {
    // sourcery: @ViewBuilder
    var secondaryAction: FioriButton? { get }
}

// sourcery: BaseComponent
protocol _TertiaryActionComponent {
    // sourcery: @ViewBuilder
    var tertiaryAction: FioriButton? { get }
}

// sourcery: BaseComponent
protocol _OverflowActionComponent {
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = "FioriButton { _ in Image(systemName: "ellipsis") }"
    // sourcery: resultBuilder.defaultValue = "{ FioriButton { _ in Image(systemName: "ellipsis") } }"
    var overflowAction: FioriButton? { get }
}

// sourcery: BaseComponent
protocol _Row1Component {
//    var numberOfLines: Int { get set }
    
    @ViewBuilder
    var row1: (() -> any View)? { get }
}

// sourcery: BaseComponent
protocol _Row2Component {
    @ViewBuilder
    var row2: (() -> any View)? { get }
}

// sourcery: BaseComponent
protocol _Row3Component {
    @ViewBuilder
    var row3: (() -> any View)? { get }
}

// sourcery: BaseComponent
protocol _CardBodyComponent {
//    var separator: Bool { get set }
    
    @ViewBuilder
    var cardBody: (() -> any View)? { get }
}

// sourcery: BaseComponent
protocol _MediaImageComponent {
    // sourcery: @ViewBuilder, resultBuilder.backingComponent = OptionalImage
    var mediaImage: Image? { get }
}

// sourcery: BaseComponent
protocol _KpiComponent {
    // sourcery: @ViewBuilder, resultBuilder.backingComponent = OptionalKPIItem
    var kpi: KPIItemData? { get }
}

// sourcery: BaseComponent
protocol _KpiCaptionComponent {
    // sourcery: @ViewBuilder
    var kpiCaption: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _PlaceholderComponent {
    // sourcery: @ViewBuilder
    var placeholder: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _TextViewComponent {
    // sourcery: @Binding
    var text: String { get }
}

// sourcery: BaseComponent
protocol _HelperTextComponent {
    // sourcery: @ViewBuilder
    var helperText: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _MoreActionOverflowComponent {
    @ViewBuilder
    var moreActionOverflow: (() -> any View)? { get }
}

// sourcery: BaseComponent
protocol _TextInputFieldComponent {
    // sourcery: @Binding
    var text: String { get }
}

// sourcery: BaseComponent
protocol _GreetingTextComponent {
    // sourcery: @ViewBuilder
    var greetingText: AttributedString { get }
}

// sourcery: BaseComponent
protocol _MessageContentComponent {
    @ViewBuilder
    var messageContent: (() -> any View)? { get }
}

// sourcery: BaseComponent
// sourcery: importFrameworks = ["FioriThemeManager"]
protocol _DecrementActionComponent {
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = "FioriButton { _ in FioriIcon.actions.less }"
    // sourcery: resultBuilder.defaultValue = "{ FioriButton { _ in FioriIcon.actions.less } }"
    var decrementAction: FioriButton? { get }
}

// sourcery: BaseComponent
// sourcery: importFrameworks = ["FioriThemeManager"]
protocol _IncrementActionComponent {
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = "FioriButton { _ in FioriIcon.actions.add }"
    // sourcery: resultBuilder.defaultValue = "{ FioriButton { _ in FioriIcon.actions.add } }"
    var incrementAction: FioriButton? { get }
}

// sourcery: BaseComponent
protocol _TopDividerComponent {
    // sourcery: defaultValue = "{ Rectangle().fill(Color.clear) }"
    @ViewBuilder
    var topDivider: (() -> any View)? { get }
}

// sourcery: BaseComponent
protocol _CloseActionComponent {
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = "FioriButton { _ in Image(systemName: "xmark") }"
    // sourcery: resultBuilder.defaultValue = "{ FioriButton { _ in Image(systemName: "xmark") } }"
    var closeAction: FioriButton? { get }
}

// sourcery: BaseComponent
protocol _TimestampComponent {
    // sourcery: @ViewBuilder
    var timestamp: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _SecondaryTimestampComponent {
    // sourcery: resultBuilder.name = @ViewBuilder, resultBuilder.backingComponent = TextOrIconView
    var secondaryTimestamp: TextOrIcon? { get }
}

// sourcery: BaseComponent
protocol _TimelineNodeComponent {
    // sourcery: resultBuilder.name = @ViewBuilder, resultBuilder.backingComponent = TimelineNodeView
    var timelineNode: TimelineNodeType { get }
}

// sourcery: BaseComponent
protocol _AttributeComponent {
    // sourcery: @ViewBuilder
    var attribute: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _SubAttributeComponent {
    // sourcery: @ViewBuilder
    var subAttribute: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _NowIndicatorNodeComponent {
    // sourcery: defaultValue = "{ Image(systemName: "circle.fill") }"
    @ViewBuilder
    var nowIndicatorNode: (() -> any View)? { get }
}

// sourcery: BaseComponent
protocol _OptionsComponent {
    var options: [AttributedString] { get }
}

// sourcery: BaseComponent
protocol _OptionalTitleComponent {
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = ""
    var optionalTitle: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _ValueLabelComponent {
    // sourcery: @ViewBuilder
    var valueLabel: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _AvatarsTitleComponent {
    // sourcery: @ViewBuilder
    var avatarsTitle: AttributedString? { get }
}

// sourcery: BaseComponent
protocol _ReviewCountLabelComponent {
    // sourcery: @ViewBuilder
    var reviewCountLabel: AttributedString? { get }
}

// sourcery: BaseComponent
// sourcery: importFrameworks = ["FioriThemeManager"]
protocol _OnStarImageComponent {
    /// The image to be used for "On" rating star.
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = "FioriIcon.actions.favorite.renderingMode(.template).resizable()"
    var onStarImage: Image { get }
}

// sourcery: BaseComponent
// sourcery: importFrameworks = ["FioriThemeManager"]
protocol _OffStarImageComponent {
    //// The image to be used for "Off" rating star.
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = "FioriIcon.actions.unfavorite.renderingMode(.template).resizable()"
    var offStarImage: Image { get }
}

// sourcery: BaseComponent
// sourcery: importFrameworks = ["FioriThemeManager"]
protocol _HalfStarImageComponent {
    //// The image to be used for "half" rating star.
    // sourcery: @ViewBuilder
    // sourcery: defaultValue = "FioriIcon.actions.halfStar.renderingMode(.template).resizable()"
    var halfStarImage: Image { get }
}
